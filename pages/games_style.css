@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@300&display=swap');

h1 {
  text-align: center;
  color: ivory;
  font-size: xx-large;
  font-family: Nunito, 'Gill Sans', 'Gill Sans MT',
    ' Calibri', 'Trebuchet MS', 'sans-serif';
  margin: 0;
}

body {
  background-color: rgb(18, 18, 18);
  color: ivory;
  font-family: Nunito, 'Gill Sans', 'Gill Sans MT', 'Calibri', 'Trebuchet MS', 'sans-serif';
}

ul {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.profile {
  position: absolute;
  top: 40px;
  right: 100px;
  align-self: center;
  justify-self: center;
  align-items: center;
}

.logout {
  position: absolute;
  top: 40px;
  right: 20px;
  align-self: center;
  justify-self: center;
  align-items: center;
}

.games {
  display: grid;
  grid-template-columns: 1fr 1fr;
  column-gap: 20px;
  row-gap: 20px;
  width: 60vw;
}

.game-container {
  padding: 20px;
  display: grid;
  grid-template-columns: 2fr 1fr;
  border: 2px solid ivory;
  border-radius: 6px;
  height: 50px;
}

.game-container:hover {
  background-color: rgb(42, 42, 42);
}

.pub-name {
  color: rgba(255, 255, 240, 0.3);
}

.menu-bar {
  background: rgb(42, 42, 42);
  text-align: center;
  margin: 20px 0;
}

.menu-bar ul {
  display: inline-flex;
  list-style: none;
  color: #fff;
}

.menu-bar ul li {
  width: 120px;
  margin: 15px;
}

.menu-bar ul li a {
  text-decoration: none;
  color: #fff;
}

.pages {
  display: flex;
  align-items: center;
}

a {
  color: ivory;
  text-decoration: none;
}

button {
  background-color: rgb(42, 42, 42);
  border-radius: 5px;
  outline: none;
  border: 1px solid ivory;
  color: ivory;
  width: 60px;
  padding: 5px;
}

button:hover {
  background-color: rgb(60, 60, 60);
}

ul,
li {
  margin: 0;
  padding: 0;
}

.pages a,
.pages li {
  margin: 0;
  padding: 0;
}

.main {
  position: relative;
}

.main_div {
  width: 200px;
  height: 100vh;
  position: absolute;
  top: 200px;
  right: 0;
  background-color: rgb(18, 18, 18);
}

.box {
  width: 400px;
  position: absolute;
  top: 200px;
  right: 0;
  transform: translate(-50%, -50%);
  padding: 50px;
  background: rgb(42, 42, 42);
  border-radius: 10px;
}

.box h1 {
  margin-bottom: 25px;
  color: #fff;
  text-align: center;
  text-transform: capitalize;
}

.box .input-box {
  position: relative;
}

.box .input-box input {
  width: 100%;
  padding: 10px;
  font-size: 16px;
  letter-spacing: 1px;
  color: #fff;
  margin-bottom: 30px;
  border: none;
  border-bottom: 1px solid #fff;
  background: transparent;
  outline: none;
}

.box .input-box label {
  position: absolute;
  top: 0;
  left: 0;
  letter-spacing: 1px;
  padding: 10px 0;
  font-size: 16px;
  color: #fff;
  transition: 0.5s;
}

.box input[type="submit"] {
  background: transparent;
  border: none;
  outline: none;
  color: #fff;
  background: #03a9f4;
  padding: 9px 18px;
  border-radius: 5px;
  font-size: 14px;
}

.box .input-box input:focus~label,
.box .input-box input:valid~label {
  top: -20px;
  left: 0;
  font-size: 12px;
  color: #03a9f4;
}

/* html,
body {
  width: 100%;
  height: 100%;
}

body {
  background-image: radial-gradient(#021027, #000000);
}

.container {
  width: 100%;
  height: 100%;
}

.circle-container {
  $particleWidth: 10px;
  $particleNum: 200;
  $particleColor: hsl(180, 100%, 80%);

  position: absolute;
  transform: translateY(-10vh);
  animation-iteration-count: infinite;
  animation-timing-function: linear;

  .circle {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    mix-blend-mode: screen;
    background-image: radial-gradient(hsl(180, 100%, 80%),
        hsl(180, 100%, 80%) 10%,
        hsla(180, 100%, 80%, 0) 56%);

    animation: fadein-frames 200ms infinite, scale-frames 2s infinite;

    @keyframes fade-frames {
      0% {
        opacity: 1;
      }

      50% {
        opacity: 0.7;
      }

      100% {
        opacity: 1;
      }
    }

    @keyframes scale-frames {
      0% {
        transform: scale3d(0.4, 0.4, 1);
      }

      50% {
        transform: scale3d(2.2, 2.2, 1);
      }

      100% {
        transform: scale3d(0.4, 0.4, 1);
      }
    }
  }

  @for $i from 1 through $particleNum {
    &:nth-child(#{$i}) {
      $circleSize: random($particleWidth);
      width: $circleSize + px;
      height: $circleSize + px;

      $startPositionY: random(10)+100;
      $framesName: "move-frames-"+$i;
      $moveDuration: 7000+random(4000)+ms;

      animation-name: #{$framesName};
      animation-duration: $moveDuration;
      animation-delay: random(11000) + ms;

      @keyframes #{$framesName} {
        from {
          transform: translate3d(#{random(100) + vw},
            #{$startPositionY + vh},
            0);
        }

        to {
          transform: translate3d(#{random(100) + vw},
            #{- $startPositionY - random(30) + vh},
            0);
        }
      }

      .circle {
        animation-delay: random(4000) + ms;
      }
    }
  }
} */